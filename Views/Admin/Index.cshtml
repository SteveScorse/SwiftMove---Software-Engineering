@model SwiftMove.Models.AdminDashboardViewModel
@{
    ViewData["Title"] = "Admin Dashboard";
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-warning">@TempData["Error"]</div>
}


<h1>Administrator Dashboard</h1>
<p>Manage all staff and admin function from this page, use the forms provided below to interact with database.</p>


<!--Services Related------------------------------------------------------------------------------->
<h2>Manage Services</h2>
<a class="btn btn-custom w-50" asp-controller="Services" asp-action="Create">Add New Service</a>
<h3>Current Services</h3>
<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Name</th>
            <th scope="col">Price</th>
            <th scope="col">No. of Staff</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var services in Model.Services)
        {
            <tr>
                <td class="fw-bold">@services.Id</td>
                <td class="fw-bold">@services.Title</td>
                <td class="fw-bold">@services.Price</td>
                <td class="fw-bold">@services.NumStaffRequired</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@services.Id" class="btn btn-warning">Edit</a>
                    <a onclick="confirmDelete(@services.Id)" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>

<script>
    function confirmDelete(id){
        //Outputs message to user
        if(confirm("Are you sure you would like to delete this Service - It Can't Be Undone?")){
            //Post request
            fetch(`/Services/Delete/${id}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(response => {
                if(response.ok){
                    window.location.reload();
                } else {
                    alert("Failed toolbar Delete Service.")
                }
            });
        }
    }
</script>
<!--Services Related------------------------------------------------------------------------------->

<!--Role Assignment Related------------------------------------------------------------------------------->
<div class="row">
    <div class="col h-auto bg-white shadow-lg rounded-3">
        <h2>Manage Account Assigned Roles</h2>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email</th>
                    <th>Address</th>
                    <th>Current Roles</th>
                    <th>Add Roles</th>
                    <th>Remove Roles</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.Users)
                {
                    List<string> currentuserRoles = Model.UserRoles[user.Id];
                    <tr>
                        <td>@user.FirstName</td>
                        <td>@user.LastName</td>
                        <td>@user.Email</td>
                        <td>@user.Address</td>
                        <td>
                            @foreach (var role in currentuserRoles)
                            {
                                @role
                        
                                <br />
                            }
                        </td>
                        <td>
                            <form asp-controller="Admin" asp-action="AssignRole" method="post" class="d-flex">
                                <input type="hidden" name="userID" value="@user.Id" />
                                <select name="roleName" class="form-select me-2">
                                    @foreach (var role in Model.Roles)
                                    {
                                        <option value="@role.Name">@role.Name</option>
                                    }
                                </select>
                                <button type="submit" class="btn btn-success">Assign</button>
                            </form>
                        </td>
                        <td>
                            <form asp-controller="Admin" asp-action="RemoveRole" method="post" class="d-flex">
                                <input type="hidden" name="userID" value="@user.Id" />
                                <select name="roleName" class="form-select">
                                    @foreach (var role in currentuserRoles)
                                    {
                                        <option value="@role">@role</option>
                                    }
                                </select>
                                <button type="submit" class="btn btn-danger">Remove</button>
                            </form>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<!--Role Assignment Related------------------------------------------------------------------------------->

<!--Role Management Related------------------------------------------------------------------------------->
<h2>Manage Roles</h2>
<form asp-controller="Admin" asp-action="AddRole" method="post" class="mb-3 d-flex">
    <input type="text" name="roleName" class="form-control w-75 me-2" required placeholder="Enter the new role" />
    <button type="submit" class="btn btn-success w-25">Add Role</button>
</form>
<h3>Existing Roles</h3>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Role Name</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var role in Model.Roles)
        {
            <tr>
                <td>@role.Name</td>
                <td>
                    <form asp-controller="Admin" asp-action="DeleteRole" method="post" onsubmit="return confirmDelete()">
                        <input type="hidden" value="@role.Id" name="roleID" />
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function confirmDelete() {
        return confirm("Are you sure you want to delete this role?");
    }
</script>
<!--Role Management Related------------------------------------------------------------------------------->

<!--Bookings Related------------------------------------------------------------------------------->
<h3>Bookings</h3>

<table class="table table-striped">
    <thead>
        <tr>
            <th>#</th>
            <th>Customer</th>
            <th>Service</th>
            <th>Date</th>
            <th>Assigned Staff</th>
            <th>Status</th>
            <th>Assign Staff</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var booking in Model.Bookings)
        {
            var availableStaff = ((Dictionary<int, List<CustomUserModel>>)ViewBag.AvailableStaffPerBooking)[booking.Id];
            var staffAssigned = booking.StaffAssignments.Count();
            var maxStaff = booking.Service.NumStaffRequired;
            bool isFull = staffAssigned >= maxStaff;

            // Conditional row highlight for fully assigned jobs
            string rowClass = isFull ? "table-success" : "";

            <tr class="@rowClass">
                <td>@booking.Id</td>
                <td>@booking.Customer.FirstName @booking.Customer.LastName</td>
                <td>@booking.Service.Title</td>
                <td>@booking.BookingDate.ToShortDateString()</td>

                <td>
                    @foreach (var sa in booking.StaffAssignments)
                    {
                        <span class="badge bg-info text-dark">@sa.Staff.FirstName</span>
                    }
                </td>

                <!-- Status Column with Dropdown -->
                <td>
                    <form asp-controller="Admin" asp-action="UpdateBookingStatus" method="post" class="d-flex">
                        <input type="hidden" name="bookingId" value="@booking.Id" />
                        <select name="status" class="form-select me-2">
                            @foreach (BookingStatus status in Enum.GetValues(typeof(BookingStatus)))
                            {
                                string selected = status == booking.Status ? "selected" : "";
                                @:<option value="@status" @selected>@status</option>
                            }
                        </select>
                        <button type="submit" class="btn btn-success">Update</button>
                    </form>
                </td>


                <!-- Assign Staff Form -->
                <td>
                    <form method="post" asp-action="AssignStaff">
                        <input type="hidden" name="bookingId" value="@booking.Id" />
                        <select name="staffId" class="form-select" @(isFull ? "disabled" : "")>
                            @foreach (var staff in availableStaff)
                            {
                                <option value="@staff.Id">@staff.FirstName @staff.LastName</option>
                            }
                        </select>
                        <button type="submit" class="btn btn-sm btn-success mt-1" @(isFull ? "disabled" : "")>Assign</button>
                        @if (isFull)
                        {
                            <small class="text-muted d-block">Max staff assigned</small>
                        }
                    </form>
                </td>

                <td>
                    <a asp-action="EditBooking" asp-route-id="@booking.Id" class="btn btn-warning">Edit</a>
                    <a onclick="confirmDelete(@booking.Id)" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>






<!--Bookings Related------------------------------------------------------------------------------->
